type Cancelled @entity(immutable: true) {
  id: Bytes!
  giver: Bytes! # address
  token: Bytes! # address
  transferID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Claimed @entity(immutable: true) {
  id: Bytes!
  giver: Bytes! # address
  token: Bytes! # address
  transferID: BigInt! # uint256
  amount: BigInt! # uint256
  recipient: Bytes! # address
  signer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposited @entity(immutable: true) {
  id: Bytes!
  giver: Bytes! # address
  token: Bytes! # address
  transferID: BigInt! # uint256
  amount: BigInt! # uint256
  expiration: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EIP712DomainChanged @entity(immutable: true) {
  id: Bytes!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferStarted @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Refunded @entity(immutable: true) {
  id: Bytes!
  giver: Bytes! # address
  token: Bytes! # address
  transferID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignerUpdated @entity(immutable: true) {
  id: Bytes!
  signer: Bytes! # address
  isActivated: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
